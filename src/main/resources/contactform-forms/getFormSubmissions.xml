<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: http://www.123contactform.com/docs/123contactform-api-retrieve-submissions/ -->
<template name="getFormSubmissions" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="formId" description="ID of the form from which, submissions need to be retrieved." />
   <parameter name="pageSize" description="The number of submissions displayed on one page.Default is 25. When stated explicitly, this must be between 25 and 100." />
   <parameter name="pageNumber" description="Indicates from which page of results(Starting from 0) need to be displayed. Default is 0 " />
   <parameter name="sort" description="The sorting order of the results. Can have one of the following values: 'ASC' (oldest → newest) or 'DESC' (newest → oldest)." />
   <sequence>
      <property name="uri.var.formId" expression="$func:formId" />
      <property name="uri.var.pageSize" expression="$func:pageSize" />
      <property name="uri.var.pageNumber" expression="$func:pageNumber" />
      <property name="uri.var.sort" expression="$func:sort" />
      <script language="js">
         <![CDATA[
            var pageSize = mc.getProperty("uri.var.pageSize");
            var pageNumber = mc.getProperty("uri.var.pageNumber");
            var sort = mc.getProperty("uri.var.sort");
            
            var payload = {};
            if(pageSize != null && pageSize != ""){
               payload.pageSize = pageSize;
            }
            if(pageNumber != null && pageNumber != ""){
               payload.pageNr = pageNumber;
            }
            if(sort != null && sort != ""){
               payload.sort = sort;
            }
            
            // Check whether any parameter exists in the payload.
            for(var prop in payload) {
               if (payload.hasOwnProperty(prop)) {
                  mc.setProperty('uri.var.isPayloadParamsExist', "true");
                  break;
               }
            }
            
            mc.setPayloadJSON(payload);            
         ]]>
      </script>
      <filter xpath="boolean(get-property('uri.var.isPayloadParamsExist'))">
         <then>
            <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2" />
         </then>
      </filter>

      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}forms/{uri.var.formId}/submissions{uri.var.apiOutput}{+uri.var.apiKey}" />
         </endpoint>
      </call>
      <!--Removing custom headers from the Response. -->
      <header name="Set-Cookie" action="remove" scope="transport" />
      <header name="Cache-control" action="remove" scope="transport" />
   </sequence>
</template>